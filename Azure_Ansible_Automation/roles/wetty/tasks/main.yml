# file: roles/wetty/tasks/main.yml
---

- name: Install required packages
  become: yes
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - make
    - nmap-ncat
    - gcc-c++

- name: Install Wetty Globaly
  become: yes
  command: npm install wetty -g chdir=/home/{{ ansible_user }}
  args:
    creates: /usr/lib/node_modules/wetty/bin/wetty.js

##Reed to fix wetty

- name: Install Wetty Globaly
  become: yes
  command: git clone https://github.com/thinknode/wetty /home/{{ ansible_user }}/wetty
  ignore_errors: True

- name: npm that ish 
  become: yes
  command: npm install /home/{{ ansible_user }}/wetty

##Reed Made changes for New GitHub and installed with NPM Will now work with node.js

#-------------------------------------------------------
# Self-Signed Certs
#-------------------------------------------------------
- name: Generate Self Signed Certs
  command: >
    openssl req -new
      -x509
      -nodes
      -days {{ item.days | default(3650) }}
      -subj "/C={{ item.country | default('') }}/ST={{ item.state | default('') }}/L={{ item.city | default('') }}/O={{ item.organization | default('') }}/OU={{ item.unit | default('') }}/CN={{ item.name }}/emailAddress={{ item.email | default('') }}"
      -newkey rsa:2048
      -keyout /home/{{ ansible_user }}/.ssh/privkey.pem
      -out /home/{{ ansible_user }}/.ssh/cert.pem
  args:
    creates: /home/{{ ansible_user }}/.ssh/*.pem
  with_items: "{{ openssl_self_signed }}"

- name: Set permissions on SSL certs
  become: yes
  file:
    path:    "/home/{{ ansible_user }}/.ssh/{{ item }}"
    group:   "{{ ansible_user }}"
    owner:   "{{ ansible_user }}"
    mode:    0400
  with_items:
    - cert.pem
    - privkey.pem

# SYSTEMD
- name: Template Systemd Service File for Wetty
  become: yes
  template:
    src:   "wetty.service.j2"
    dest:  "/etc/systemd/system/wetty.service"
    group: root
    owner: root
    mode:  0644
  notify: wetty

# password_hash requires the passlib python module to generate password hashes
# pip install passlib
- name: Set azure-user password
  become: yes
  user:
    name:      "azure-user"
    password:  "{{ admin_password |password_hash('sha512') }}"
    state:     present
    append:    yes

- name: Update SSH Config
  become: yes
  copy:
    src: sshd_config
    dest: "/etc/ssh/sshd_config"
    group: root
    owner: root
    mode: 0644
  notify:
    - sshd

- name: check to see if firewalld is installed
  become: yes
  command: rpm -q firewalld
  register: rf_result
  ignore_errors: True

- name: Turn off Firewall
  become: yes
  systemd:
    name: firewalld
    enabled: no
    state: stopped
  when: rf_result.rc == 0

- name: Create SELinux dir
  become: yes
  file:
    group: "{{ ansible_user }}"
    owner: "{{ ansible_user }}"
    mode:  0700
    path:  "/home/{{ ansible_user }}/.selinux"
    state: directory

- name: Copy over SELinux modules for Wetty
  become: yes
  copy:
    src:   "{{ item }}"
    dest:  "/home/{{ ansible_user }}/.selinux"
    group: "{{ansible_user}}"
    owner: "{{ansible_user}}"
    mode:  0700
  with_items:
    - wetty.pp
    - wetty.te
  register: result

- name: Update SELinux for Wetty
  become: yes
  command: semodule -i wetty.pp chdir=/home/{{ ansible_user }}/.selinux
  notify: wetty
  when: result.changed

- name: enable and start wetty service
  become: yes
  service:
    name: wetty
    enabled: yes
    state: started

##Wetty Start via Node app.js 

- name: Start Wetty the Reed Way
  become: yes
  command: node /home//{{ ansible_user }}/wetty/app.js --sslkey /home/student1/.ssh/privkey.pem --sslcert /home/student1/.ssh/cert.pem -p 8888 

#-------------------------------------------------------
# verify that wetty is running
#-------------------------------------------------------
- name: Verify that wetty is listening
  shell: ncat -v -C --ssl localhost 8888 < /dev/null
  register: wetty_status
  changed_when: "wetty_status.rc != 0"
