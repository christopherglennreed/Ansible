## This is needed for sshpass
- name: Install EPEL
  yum:
    name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm"
    state: present

- name: Install base packages
  yum:
    name:
      - vim
      - git
      - wget
      - nano
      - tree
      - sshpass
      - tmux
      - python-pip
      - https://releases.ansible.com/ansible/rpm/release/epel-7-x86_64/ansible-2.7.0-1.el7.ans.noarch.rpm
    state: present
  retries: 10
  delay: 5

- name: Install base packages for netaddr
  yum:
    name:
      - python-netaddr
    state: latest

- name: upgrade all packages
  yum:
    name: '*'
    state: latest

- name: Install ansible.cfg and vimrc in home directory
  template:
    src: ansible.cfg.j2
    dest: "/home/{{ username }}/.ansible.cfg"
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Install vimrc in home directory
  template:
    src: vimrc.j2
    dest: "/home/{{ username }}/.vimrc"
    owner: "{{ username }}"
    group: "{{ username }}"

- name: check to see if ansible tower is already up and running
  uri:
    url: https://localhost/api/v2/ping/
    method: GET
    user: admin
    password: "{{admin_password}}"
    validate_certs: False
    force_basic_auth: yes
  register: check_tower
  ignore_errors: yes
  when:
    - towerinstall is defined
    - towerinstall

- name: install tower if knob is set
  include_tasks: "tower.yml"
  when:
    - towerinstall is defined
    - towerinstall
    - check_tower is failed

- name: Ensure eula is accepted if posting license
  lineinfile:
    path: "{{playbook_dir}}/tower_license.json"
    line: '    "eula_accepted": true,'
    insertbefore: '"company_name"'
    state: present
  delegate_to: localhost
  run_once: true
  become: no
  when:
    - autolicense is defined
    - autolicense

- name: Post license key
  uri:
    url: https://{{ansible_host}}/api/v2/config/
    method: POST
    user: admin
    password: "{{admin_password}}"
    body: "{{ lookup('file',playbook_dir+'/tower_license.json') }}"
    body_format: json
    validate_certs: False
    force_basic_auth: yes
  when:
    - autolicense is defined
    - autolicense

- name: Enable firewalld
  become: yes
  service: name=firewalld state=started enabled=yes
  ignore_errors: True

- name: Set dmz as default policy
  command: firewall-cmd --set-default-zone=public

- name: open web port 8080
  become: yes
  firewalld: port=8080/tcp zone=public permanent=true state=enabled immediate=yes

- name: open web port 80
  become: yes
  firewalld: port=80/tcp zone=public permanent=true state=enabled immediate=yes

- name: restart firewalld
  become: yes
  service: name=firewalld state=restarted

- name: Install pip
  easy_install:
    name: pip==8.1.2

- name: Install Ansible Azure Requirements
  pip:
    name: ansible[azure]

- name: Import Azure RMP keys
  rpm_key:
    state: present
    key: https://packages.microsoft.com/keys/microsoft.asc

- name: Execute the shell command for Azure CLI
  shell: echo -e "[azure-cli]\nname=Azure CLI\nbaseurl=https://packages.microsoft.com/yumrepos/azure-cli\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/azure-cli.repo

- name: Install Azure CLI
  yum:
    name: azure-cli
    state: latest
